[1743161241.1129496]: Starting tests!
[1743161241.1130586]: Test #0
[1743161241.7668312]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161242.8599386]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161244.365533]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161246.1461926]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161247.6631575]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161249.2038193]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161250.8962042]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161252.5515041]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161253.5609415]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161254.5348597]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161255.6297023]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161256.7615318]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161258.779888]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161261.8017914]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161265.5135355]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161270.1387184]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161272.3900156]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161273.941298]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161275.514479]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161277.0284896]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161279.8094196]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161280.8700213]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161282.4179053]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161284.0288706]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161287.3530147]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161289.5296369]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161293.4969244]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161297.2504942]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161298.923771]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161300.597684]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161304.1781633]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161305.6966128]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161307.247415]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161308.1726527]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161309.2761614]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161310.3573308]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161311.5349233]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161312.5362682]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161313.674387]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161314.769416]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161316.596482]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161317.8507888]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161328.105966]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161329.3049223]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161330.208304]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161341.0707111]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161342.571873]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161343.9993567]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161345.3659976]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161346.9865663]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161347.4896317]: Test #1
[1743161347.891256]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161348.994129]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161350.5160198]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161352.306585]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161353.843777]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161355.4054263]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161357.1197438]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161358.7971725]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161359.8164785]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161360.7982807]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161361.9018636]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161363.0456204]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161365.0840433]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161368.1389234]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161371.893917]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161376.5635903]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161378.831474]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161380.3927646]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161381.9742966]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161383.498577]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161386.2998874]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161387.3636112]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161388.9195464]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161390.539766]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161393.8852396]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161396.074975]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161400.0640438]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161403.8373535]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161405.5159817]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161407.1933055]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161410.7858748]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161412.3036036]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161413.8571784]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161414.7828338]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161415.8869498]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161416.9695265]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161418.147692]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161419.1495216]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161420.2890332]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161421.3846133]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161423.214428]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161424.4684825]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161434.7417269]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161435.9417794]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161436.845677]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161447.729386]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161449.2316232]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161450.6595478]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161452.0285463]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161453.6507924]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161454.1538935]: Test #2
[1743161454.5609384]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161455.6605463]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161457.184032]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161458.976115]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161460.5146217]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161462.0769813]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161463.7919571]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161465.4700208]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161466.4913092]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161467.4748175]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161468.5799766]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161469.7232745]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161471.761889]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161474.8170314]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161478.5663767]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161483.2411265]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161485.5103319]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161487.072326]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161488.6554186]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161490.1801393]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161492.9844196]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161494.047433]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161495.604627]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161497.2267637]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161500.568196]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161502.7588778]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161506.7509298]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161510.532196]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161512.2132173]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161513.8928323]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161517.4945517]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161519.0186808]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161520.5639834]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161521.4892633]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161522.5946743]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161523.676392]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161524.8542445]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161525.8563719]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161526.9956567]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161528.0896177]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161529.919892]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161531.1758897]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161541.5117517]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161542.7346132]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161543.6750333]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161554.6873221]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161556.1928174]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161557.6256359]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161558.9990668]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161560.6255136]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161561.1285062]: Test #3
[1743161561.5144618]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161562.6195025]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161564.145827]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161565.940221]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161567.4811113]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161569.0429063]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161570.7603188]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161572.4396596]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161573.4596393]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161574.4416595]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161575.5461097]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161576.686842]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161578.7273371]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161581.784128]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161585.4803953]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161590.1644838]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161592.4383178]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161594.002691]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161595.5871267]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161597.1120665]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161599.918548]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161600.9826677]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161602.5402458]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161604.1618721]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161607.4471571]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161609.639171]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161613.6398604]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161617.4201605]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161619.1015573]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161620.7813706]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161624.379955]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161625.9025302]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161627.4011595]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161628.3245187]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161629.4291368]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161630.5093045]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161631.6868274]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161632.6870475]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161633.8246763]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161634.9199154]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161636.7502816]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161638.0045745]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161648.2945204]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161649.4978707]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161650.4026523]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161661.2404587]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161662.7450058]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161664.1765497]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161665.5501912]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161667.1727884]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161667.6759067]: Test #4
[1743161668.0629673]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161669.1656938]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161670.6899564]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161672.4844725]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161674.024208]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161675.5855958]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161677.3021138]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161678.9810321]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161680.0019352]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161680.9858537]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161682.0902083]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161683.234079]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161685.2734182]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161688.3298554]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161692.0261228]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161696.7084813]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161698.9831657]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161700.551866]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161702.1360893]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161703.6619668]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161706.468784]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161707.5343003]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161709.0921845]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161710.7129447]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161714.0030048]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161716.2000237]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161720.1995153]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161723.9842293]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161725.6655343]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161727.3475006]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161730.9479053]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161732.470489]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161733.9710464]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161734.8969233]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161736.0016139]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161737.084133]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161738.264037]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161739.2654517]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161740.404983]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161741.5026321]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161743.3326275]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161744.5874116]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161754.8784485]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161756.0813594]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161756.9869974]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161767.8276267]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161769.3320801]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161770.7630317]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161772.135631]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161773.759136]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161774.262167]: Test #5
[1743161774.6486633]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161775.7537189]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161777.279648]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161779.073983]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161780.614955]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161782.1779304]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161783.8955066]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161785.5758412]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161786.5973299]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161787.5801175]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161788.6847289]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161789.828656]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161791.869298]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161794.9278343]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161798.6295526]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161803.311783]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161805.5860984]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161807.1509566]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161808.736767]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161810.2636232]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161813.0725734]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161814.1393638]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161815.6994581]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161817.3247495]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161820.616077]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161822.813405]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161826.8148243]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161830.596732]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161832.2767246]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161833.9576688]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161837.5576422]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161839.080142]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161840.5816922]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161841.5083852]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161842.615706]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161843.7000837]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161844.880401]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161845.8805592]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161847.020523]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161848.1188662]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161849.94932]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161851.2059183]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161861.5143492]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161862.7179663]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161863.6239603]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161874.4727962]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161875.9740644]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161877.4043944]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161878.777944]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161880.403712]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161880.9065516]: Test #6
[1743161881.2934334]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161882.39853]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161883.9234529]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161885.7187903]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161887.261178]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161888.8268042]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161890.543687]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161892.2252662]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161893.2471018]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743161894.231145]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743161895.3363652]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743161896.4805171]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743161898.524376]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743161901.586356]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743161905.2894049]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743161909.972511]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743161912.2444847]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743161913.809827]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743161915.395546]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743161916.9234498]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743161919.7309797]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743161920.7972984]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743161922.3563006]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743161923.9804733]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743161927.2707036]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743161929.467667]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743161933.4668949]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743161937.2505202]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743161938.9308994]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743161940.6114936]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743161944.2104378]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743161945.7316]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743161947.232557]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743161948.1587932]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743161949.2653866]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743161950.348386]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743161951.527215]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743161952.5280313]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743161953.667242]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743161954.7636776]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743161956.5930405]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743161957.849198]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743161968.147846]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743161969.3514595]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743161970.2573366]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743161981.1007302]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743161982.604454]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743161984.0355525]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743161985.4089448]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743161987.0332923]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743161987.5363584]: Test #7
[1743161987.9228966]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743161989.0285974]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743161990.5539494]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743161992.3481755]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743161993.8891327]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743161995.4534612]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743161997.1699252]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743161998.8495085]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743161999.8712351]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743162000.8542051]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743162001.9589324]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743162003.1021237]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743162005.1420815]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743162008.203003]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743162011.902744]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743162016.5847561]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743162018.8592272]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743162020.4230723]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743162022.0063322]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743162023.5334566]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743162026.3422208]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743162027.4086695]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743162028.9678562]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743162030.592633]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743162033.8822806]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743162036.0781136]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743162040.0764976]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743162043.8585308]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743162045.5389326]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743162047.2192104]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743162050.8199542]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743162052.3419485]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743162053.8436959]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743162054.7695446]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743162055.8764367]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743162056.9593725]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743162058.1407347]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743162059.143096]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743162060.2839844]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743162061.3808715]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743162063.2117534]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743162064.46693]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743162074.7701063]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743162075.973726]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743162076.878837]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743162087.7223532]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743162089.2263625]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743162090.657533]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743162092.03075]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743162093.6543317]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743162094.1574304]: Test #8
[1743162094.5439327]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743162095.6493845]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743162097.1752079]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743162098.9705684]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743162100.5116684]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743162102.0775661]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743162103.795741]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743162105.4760137]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743162106.497383]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743162107.480705]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743162108.5861301]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743162109.730508]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743162111.773889]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743162114.8365943]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743162118.541392]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743162123.2264533]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743162125.5013585]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743162127.0663457]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743162128.6511302]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743162130.1790054]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743162132.9879699]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743162134.0552497]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743162135.616484]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743162137.2403889]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743162140.530188]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743162142.726484]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743162146.7289634]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743162150.513625]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743162152.1948287]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743162153.8757615]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743162157.4757707]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743162158.9981973]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743162160.499624]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743162161.4249148]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743162162.5330052]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743162163.617069]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743162164.797605]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743162165.7992263]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743162166.9383667]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743162168.034789]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743162169.8656604]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743162171.122245]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743162181.4239948]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743162182.626869]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743162183.5328853]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743162194.371609]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743162195.8756487]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743162197.3063]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743162198.679351]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743162200.3034945]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743162200.8066022]: Test #9
[1743162201.193061]: 0 --- say hello

def say_hello(robot):
    robot.say('hello')

say_hello(robot)
[1743162202.2994215]: 1 --- do you like ice cream

def do_you_like_ice_cream(robot):
    robot.say('I like ice cream')

do_you_like_ice_cream(robot)
[1743162203.8242302]: 2 --- tell me the first law of robotics

def tell_me_the_first_law_of_robotics(robot):
    robot.say('A robot may not injure a human being or, through inaction, allow a human being to come to harm.')

tell_me_the_first_law_of_robotics(robot)
[1743162205.6179264]: 3 --- can you find an apple

def can_you_find_an_apple(robot):
    (apple_pose, apple_found) = robot.find('apple')
    if apple_found:
        robot.say('I found an apple!')
    else:
        robot.say("I couldn't find an apple!")

can_you_find_an_apple(robot)
[1743162207.1586401]: 4 --- move a little left

def move_a_little_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_left(robot)
[1743162208.7225282]: 5 --- move ten centimeters up

def move_ten_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    robot.add_waypoint(waypoint)
    robot.go()

move_ten_centimeters_up(robot)
[1743162210.4391046]: 6 --- go one hundred and fifty millimeters backwards

def go_one_hundred_and_fifty_millimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_one_hundred_and_fifty_millimeters_backwards(robot)
[1743162212.1192586]: 7 --- move fifteen centimeters above the die

def move_fifteen_centimeters_above_the_die(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.15
    robot.add_waypoint(waypoint)
    robot.go()

move_fifteen_centimeters_above_the_die(robot)
[1743162213.1404247]: 8 --- look at the die

def look_at_the_die(robot):
    look_at(robot, 'die')

look_at_the_die(robot)
[1743162214.1230886]: 9 --- pick up the die

def pick_up_the_die(robot):
    pick(robot, 'die')

pick_up_the_die(robot)
[1743162215.2289176]: 10 --- rotate 33 degrees clockwise

def rotate_33_degrees_clockwise(robot):
    rotate(robot, 'z', 33)

rotate_33_degrees_clockwise(robot)
[1743162216.37282]: 11 --- tilt seventy degrees forwards

def tilt_seventy_degrees_forwards(robot):
    rotate(robot, 'x', 70)

tilt_seventy_degrees_forwards(robot)
[1743162218.4161003]: 12 --- go ten centimeters up and fifteen centimeters backwards

def go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.1
    waypoint.position.x -= 0.15
    robot.add_waypoint(waypoint)
    robot.go()

go_ten_centimeters_up_and_fifteen_centimeters_backwards(robot)
[1743162221.4771523]: 13 --- draw an ellipse with radii five and four centimeters

def draw_an_ellipse_with_radii_five_and_four_centimeters(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.04 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_an_ellipse_with_radii_five_and_four_centimeters(robot)
[1743162225.1792684]: 14 --- move point five meters up and then draw a small pentagon

def move_point_five_meters_up_and_then_draw_a_small_pentagon(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()
    waypoints = 5
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.1 * math.cos((((2 * math.pi) * i) / 5)))
        waypoint.position.y += (0.1 * math.sin((((2 * math.pi) * i) / 5)))
        robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up_and_then_draw_a_small_pentagon(robot)
[1743162229.8619785]: 15 --- if you find a hammer and nails, say tools found, otherwise tell me what's missing

def if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot):
    (hammer_pose, hammer_found) = robot.find('hammer')
    (nails_pose, nails_found) = robot.find('nails')
    if (hammer_found and nails_found):
        robot.say('Tools found!')
    elif (hammer_found and (not nails_found)):
        robot.say('Hammer found!')
    elif ((not hammer_found) and nails_found):
        robot.say('Nails found!')
    else:
        robot.say('Nothing found!')

if_you_find_a_hammer_and_nails_say_tools_found_otherwise_tell_me_whats_missing(robot)
[1743162232.1364348]: 16 --- five centimeters up and four down

def five_centimeters_up_and_four_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

five_centimeters_up_and_four_down(robot)
[1743162233.701159]: 17 --- move point five meters up

def move_point_five_meters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.5
    robot.add_waypoint(waypoint)
    robot.go()

move_point_five_meters_up(robot)
[1743162235.286202]: 18 --- point four centimeters down

def point_four_centimeters_down(robot):
    waypoint = robot.get_pose()
    waypoint.position.z -= 0.04
    robot.add_waypoint(waypoint)
    robot.go()

point_four_centimeters_down(robot)
[1743162236.8138227]: 19 --- what's the cube root of three rounded to two decimal points

def whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot):
    robot.say(round(math.pow(3, (1 / 3)), 2))

whats_the_cube_root_of_three_rounded_to_two_decimal_points(robot)
[1743162239.6219804]: 20 --- draw a small circle

def draw_a_small_circle(robot):
    waypoints = 25
    for i in range((waypoints + 1)):
        waypoint = robot.get_pose()
        waypoint.position.x += (0.05 * math.cos((((2 * math.pi) * i) / 25)))
        waypoint.position.y += (0.05 * math.sin((((2 * math.pi) * i) / 25)))
        robot.add_waypoint(waypoint)
    robot.go()

draw_a_small_circle(robot)
[1743162240.6900246]: 21 --- place held item on the table

def place_held_item_on_the_table(robot):
    place(robot, 'table')

place_held_item_on_the_table(robot)
[1743162242.2488506]: 22 --- move a little backwards

def move_a_little_backwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

move_a_little_backwards(robot)
[1743162243.8721018]: 23 --- a bit back the other way

def a_bit_back_the_other_way(robot):
    waypoint = robot.get_pose()
    waypoint.position.x -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_back_the_other_way(robot)
[1743162247.162674]: 24 --- move a little forwards and then to the left

def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_forwards_and_then_to_the_left(robot):
    move_a_little_forwards(robot)
    move_a_little_to_the_left(robot)

move_a_little_forwards_and_then_to_the_left(robot)
[1743162249.359702]: 25 --- wait five seconds, then move a little up

def move_a_little_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def wait_five_seconds_then_move_a_little_up(robot):
    time.sleep(5)
    move_a_little_up(robot)

wait_five_seconds_then_move_a_little_up(robot)
[1743162253.3600397]: 26 --- if you can't find a banana, wait a little and try one more time

def if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot):
    (banana_pose, banana_found) = robot.find('banana')
    if (not banana_found):
        robot.say("Can't find the banana!")
        time.sleep(1)
        (banana_pose, banana_found) = robot.find('banana')
        if (not banana_found):
            robot.say("Can't find the banana!")
        else:
            robot.say('Found the banana!')
    else:
        robot.say('Found the banana!')

if_you_cant_find_a_banana_wait_a_little_and_try_one_more_time(robot)
[1743162257.1424072]: 27 --- if you see a screw, move ten centimeters above item

def if_you_see_a_screw_move_ten_centimeters_above_item(robot):
    (screw_pose, screw_found) = robot.find('screw')
    if (not screw_found):
        robot.say("Can't find the screw!")
    else:
        waypoint = robot.get_pose()
        waypoint.position.x = screw_pose.position.x
        waypoint.position.y = screw_pose.position.y
        waypoint.position.z = (screw_pose.position.z + 0.1)
        robot.add_waypoint(waypoint)
        robot.go()

if_you_see_a_screw_move_ten_centimeters_above_item(robot)
[1743162258.8228314]: 28 --- move 1.5 centimeters up

def move_1_point_5_centimeters_up(robot):
    waypoint = robot.get_pose()
    waypoint.position.z += 0.015
    robot.add_waypoint(waypoint)
    robot.go()

move_1_point_5_centimeters_up(robot)
[1743162260.5034118]: 29 --- go 3.1 meters to the left

def go_3_point_1_meters_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 3.1
    robot.add_waypoint(waypoint)
    robot.go()

go_3_point_1_meters_to_the_left(robot)
[1743162264.1019828]: 30 --- move a little to the left and then right, repeat three times

def move_a_little_to_the_right(robot):
    waypoint = robot.get_pose()
    waypoint.position.y += 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= 0.05
    robot.add_waypoint(waypoint)
    robot.go()



def move_a_little_to_the_left_and_then_right_repeat_three_times(robot):
    for i in range(3):
        move_a_little_to_the_left(robot)
        move_a_little_to_the_right(robot)

move_a_little_to_the_left_and_then_right_repeat_three_times(robot)
[1743162265.6241653]: 31 --- a little forwards

def a_little_forwards(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_little_forwards(robot)
[1743162267.1249046]: 32 --- a bit more

def a_bit_more(robot):
    waypoint = robot.get_pose()
    waypoint.position.x += 0.05
    robot.add_waypoint(waypoint)
    robot.go()

a_bit_more(robot)
[1743162268.0516498]: 33 --- say cheese

def say_cheese(robot):
    robot.say('cheese')

say_cheese(robot)
[1743162269.1603677]: 34 --- do you like puppies

def do_you_like_puppies(robot):
    robot.say('I like puppies')

do_you_like_puppies(robot)
[1743162270.2443879]: 35 --- why do you like them

def why_do_you_like_them(robot):
    robot.say('Why do you like them?')

why_do_you_like_them(robot)
[1743162271.4256532]: 36 --- what's your favourite book

def whats_your_favourite_book(robot):
    robot.say('My favourite book is The Hobbit')

whats_your_favourite_book(robot)
[1743162272.4273431]: 37 --- who's the author

def whos_the_author(robot):
    robot.say('I am ')

whos_the_author(robot)
[1743162273.569646]: 38 --- rotate a quarter turn anticlockwise

def rotate_a_quarter_turn_anticlockwise(robot):
    rotate(robot, 'z', (- 90))

rotate_a_quarter_turn_anticlockwise(robot)
[1743162274.669318]: 39 --- rotate back the other way

def rotate_back_the_other_way(robot):
    rotate(robot, 'z', (- 90))

rotate_back_the_other_way(robot)
[1743162276.50202]: 40 --- move a random amount to the left, but less than a meter

def move_a_random_amount_to_the_left_but_less_than_a_meter(robot):
    waypoint = robot.get_pose()
    waypoint.position.y -= random.random()
    robot.add_waypoint(waypoint)
    robot.go()

move_a_random_amount_to_the_left_but_less_than_a_meter(robot)
[1743162277.7611158]: 41 --- again but half the maximum distance

def again_but_half_the_maximum_distance(robot):
    robot.set_max_distance(0.5)
    robot.go()

again_but_half_the_maximum_distance(robot)
[1743162288.0621262]: 42 --- check if you can see the cover, try again up to three times, waiting 3 seconds in between
[1743162289.2659078]: 43 --- do you like to work with humans

def do_you_like_to_work_with_humans(robot):
    robot.say('I like to work with humans')

do_you_like_to_work_with_humans(robot)
[1743162290.1719801]: 44 --- good job

def good_job(robot):
    robot.say('good job')

good_job(robot)
[1743162301.014278]: 45 --- build a house

def place_floor(robot):
    place(robot, 'floor')



def pick_up_floor(robot):
    pick(robot, 'floor')



def place_wall(robot):
    place(robot, 'wall')



def pick_up_wall(robot):
    pick(robot, 'wall')



def place_foundation(robot):
    place(robot, 'foundation')



def pick_up_foundation(robot):
    pick(robot, 'foundation')



def place_chimney(robot):
    place(robot, 'chimney')



def pick_up_chimney(robot):
    pick(robot, 'chimney')



def place_window(robot):
    place(robot, 'window')



def pick_up_window(robot):
    pick(robot, 'window')



def place_door(robot):
    place(robot, 'door')



def pick_up_door(robot):
    pick(robot, 'door')



def place_roof(robot):
    place(robot, 'roof')



def pick_up_roof(robot):
    pick(robot, 'roof')



def place_bricks(robot):
    place(robot, 'bricks')



def pick_up_bricks(robot):
    pick(robot, 'bricks')



def place_on_the_table(robot):
    place(robot, 'table')



def build_a_house(robot):
    place_on_the_table(robot)
    pick_up_bricks(robot)
    place_bricks(robot)
    pick_up_roof(robot)
    place_roof(robot)
    pick_up_door(robot)
    place_door(robot)
    pick_up_window(robot)
    place_window(robot)
    pick_up_chimney(robot)
    place_chimney(robot)
    pick_up_foundation(robot)
    place_foundation(robot)
    pick_up_wall(robot)
    place_wall(robot)
    pick_up_floor(robot)
    place_floor(robot)

build_a_house(robot)
[1743162302.5176342]: 46 --- push the red button

def push_the_red_button(robot):
    robot.set_digital_output(0, True)
    time.sleep(0.5)
    robot.set_digital_output(0, False)

push_the_red_button(robot)
[1743162303.9483964]: 47 --- pick up the battery and place it on the base plate

def pick_up_the_battery_and_place_it_on_the_base_plate(robot):
    pick(robot, 'battery')
    place(robot, 'base plate')

pick_up_the_battery_and_place_it_on_the_base_plate(robot)
[1743162305.3222988]: 48 --- what tool should i use to tighten screws

def what_tool_should_i_use_to_tighten_screws(robot):
    robot.say('I should use a screwdriver to tighten screws')

what_tool_should_i_use_to_tighten_screws(robot)
[1743162306.943583]: 49 --- what tool should i use to tighten bolts to correct torque

def what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot):
    robot.say('I would use a torque wrench to tighten bolts to the correct torque.')

what_tool_should_i_use_to_tighten_bolts_to_correct_torque(robot)
[1743162307.4466474]: Writing outputs!
